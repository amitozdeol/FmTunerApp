This directory contains a few utilities that are mainly used as test tools
for the developers. However they can also be used as example code on how to
handle sliced VBI (the main focus of these tools).

Here is a short description of the available tools:

fwapi:
	fwapi [-enc|-dec] -mbox_put N -cmd DDD -data1 DDD -data2 DDD -data3 DDD -data4 DDD
	Executes a firmware mailbox command. For internal testing only.
	
vbi-detect:
	vbi-detect [vbi-device]
	Autodetects the available VBI services on the selected channel.
	The default vbi device is /dev/vbi0. If you want to use sliced
	VBI in your own code but still want to dynamically detect the
	available services then this code is a good starting point.

vbi-passthrough:
	vbi-passthrough [vbi in device] [vbi out device]
	Example code that reads sliced VBI from the VBI-in device and
	writes it to the VBI-out device (by default /dev/vbi0 and /dev/vbi16).
	Usually you will embed VBI data in the mpeg stream and let the
	driver write it to TV-out, but this is an other option.

vbi:
	vbi [vbi-device]
	Reads the sliced VBI data from the given VBI device (by default
	/dev/vbi0) and parses it. Heavily used for testing the sliced
	VBI data streams. A good source for example code on how to
	use sliced VBI.

wss:
	wss 0|1 [vbi device]
	Simple tool to force TV-out to 4:3 ratio (0) or 16:9 ratio (1).
	The default vbi device is /dev/vbi16. PAL only. Usually you will
	embed the WSS data in the mpeg stream and let the driver write it
	to TV-out, but this is an other option.
